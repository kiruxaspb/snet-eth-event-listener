plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-plugin-tracing
  - serverless-prune-plugin
  - serverless-latest-layer-version

service: eth-event-listener
provider:
  name: aws
  runtime: python3.7
  description: Ethereum event listener
  memorySize: 512
  timeout: 90
  region: ${file(./config.${self:provider.stage}.json):REGION}
  stage: ${opt:stage,'dev'}
  deploymentBucket:
    name: snet-serverless-artifacts
    serverSideEncryption: AES256
    tags:
      key1: ethereum-event-listener
      key2: ethereum-event-publisher
    deploymentPrefix: serverless
    tracing: true

custom:
  pythonRequirements:
    fileName: requirements.txt
    dockerizePip: true
    useDownloadCache: true
    useStaticCache: true
    cacheLocation: "/var/cache/serverless"
  prune:
    automatic: true
    includeLayers: true
    number: 2

package:
  exclude:
    - .circleci/**
    - .serverless/**
    - node_modules/**
    - package.json
    - package-lock.json
    - .gitignore
    - serverless.yml
    - README.md
    - LICENSE
    - config.rt-v2.json

functions:
  listen-to-ethereum-events:
    handler: application/handlers/event_listener_handler.listen_to_ethereum_events
    role: ${file(./config.${self:provider.stage}.json):ROLE}
    vpc:
      securityGroupIds:
        - ${file(./config.${self:provider.stage}.json):SG1}
        - ${file(./config.${self:provider.stage}.json):SG2}
      subnetIds:
        - ${file(./config.${self:provider.stage}.json):VPC1}
        - ${file(./config.${self:provider.stage}.json):VPC2}

  monitor-events:
    handler: application/handlers/event_listener_handler.monitor_events
    role: ${file(./config.${self:provider.stage}.json):ROLE}
    vpc:
      securityGroupIds:
        - ${file(./config.${self:provider.stage}.json):SG1}
        - ${file(./config.${self:provider.stage}.json):SG2}
      subnetIds:
        - ${file(./config.${self:provider.stage}.json):VPC1}
        - ${file(./config.${self:provider.stage}.json):VPC2}
    events:
      - schedule:
          rate: rate(2 minutes)
          enabled: ${file(./config.${self:provider.stage}.json):monitor-events-service-cron-state}

  test-subscriber:
    handler: application/handlers/event_publisher_handler.consume_event_from_publisher
    role: ${file(./config.${self:provider.stage}.json):ROLE}
    events:
      - sns: arn:${file(./config.${self:provider.stage}.json):registryPublisherTopic}
      - sns: arn:${file(./config.${self:provider.stage}.json):mpePublisherTopic}
      - sns: arn:${file(./config.${self:provider.stage}.json):tokenStakePublisherTopic}

resources:
  Resources:
    RegistryPublisherTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: RegistryPublisherTopic

    MPEPublisherTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: MPEPublisherTopic

    TokenStakePublisherTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: TokenStakePublisherTopic